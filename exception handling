/*Television Information Processing Using Exceptional Handling Mechanism*/
/*		S-121004273		Batch-D			SE-73		*/
#include<iostream>
#include<string.h>
using namespace std;
class Television
{
		int model;
		int size;
		float price;
	public:
		Television(){}
		friend istream& operator>>(istream &inn,Television &t);
		friend ostream& operator<<(ostream &outt,Television &t);
		void Initialize();
};
istream& operator>>(istream &inn,Television &t)
{
	cout<<"\n Enter the Model Number:\t ";
	inn>>t.model;
	cout<<"\n Enter size in Inches:\t ";
	inn>>t.size;	
	cout<<"\n Enter the price:\t ";		
	inn>>t.price;

	try
	{
		if(t.model>9999)
			throw(1);
		else if((t.size<=12)||(t.size>=70))
			throw(2);
		else if((t.price<0)||(t.price>50000))
			throw(3);
	}
	catch(int x)
	{
		cout<<"\n Exception Caught..";
		if(x==1)
			cout<<"\n Invalid Model Number!!";	
		else if(x==2)
			cout<<"\n Invalid Size Number!!";
		else
			cout<<"\n Invalid Price!!";
		t.Initialize();
	}
	return inn;
}
ostream& operator<<(ostream &outt,Television &t)
{
	outt<<"\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!";
	outt<<"\n \t Television Details";
	outt<<"\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!";
	outt<<"\n Model NUMBER : "<<t.model;
	outt<<"\n Size	: "<<t.size;
	outt<<"\n Price : "<<t.price;
	return outt;
}
void Television::Initialize()
{
	model=0;
	size=0;
	price=0.0;
}
int main()
{
	Television obj;
	cin>>obj;
	cout<<obj;
	cout<<endl;
	return 0;
}
